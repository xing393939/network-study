kprobe:__nf_conntrack_confirm
{
        $skb = (struct sk_buff*) arg0;
        $ip_header = ((struct iphdr *) ($skb->head + $skb->network_header));
        $tcp_header= ((struct tcphdr *) ($skb->head + $skb->network_header + ($ip_header->ihl << 2)));
        $sport = $tcp_header->source;
        $dport = $tcp_header->dest;
        $dport = ($dport >> 8) | (($dport << 8) & 0xff00);
        $sport = ($sport >> 8) | (($sport << 8) & 0xff00);
	@mysport[tid] = $sport;
	@mydport[tid] = $dport;
}
kretprobe:__nf_conntrack_confirm
{
	$sport = @mysport[tid];
	$dport = @mydport[tid];
	if ($dport == 8100) {
		time("%H:%M:%S ");
		printf("%d > %d %d\n", $sport, $dport, retval);
	}
}
kprobe:kfree_skb
{
        $skb = (struct sk_buff*) arg0;
        $ip_header = ((struct iphdr *) ($skb->head + $skb->network_header));
	if ($ip_header->daddr == 0x7802a8c0) 
	{
		@[kstack(11)] = count();
		$tcp_header= ((struct tcphdr *) ($skb->head + $skb->network_header + ($ip_header->ihl << 2)));
		$sport = $tcp_header->source;
		$dport = $tcp_header->dest;
		$dport = ($dport >> 8) | (($dport << 8) & 0xff00);
		$sport = ($sport >> 8) | (($sport << 8) & 0xff00);
		if ($dport == 8100) {
			time("%H:%M:%S ");
        		printf("%s:%d > %s:%d\n", ntop($ip_header->saddr), $sport, ntop($ip_header->daddr), $dport);
		}
	}
}
